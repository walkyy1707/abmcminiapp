{"version":3,"sources":["components/Home.js","components/Game.js","components/Missions.js","components/Referral.js","components/Leaderboard.js","App.js","index.js"],"names":["Home","_ref","initData","userData","setUserData","useState","isClaiming","setIsClaiming","useEffect","fetchUser","async","response","fetch","encodeURIComponent","window","Telegram","WebApp","initDataUnsafe","start_param","headers","Authorization","ok","Error","data","json","error","console","React","createElement","points","tickets","onClick","method","prev","alert","disabled","last_ticket_date","Date","toISOString","split","Game","setTickets","playing","setPlaying","score","setScore","canvasRef","useRef","objectsRef","catchSound","Audio","then","res","canvas","current","ctx","getContext","animationFrameId","render","clearRect","width","height","forEach","obj","y","speed","filter","o","beginPath","arc","x","Math","PI","fillStyle","fill","length","random","push","requestAnimationFrame","cancelAnimationFrame","submitScore","body","JSON","stringify","ref","e","rect","getBoundingClientRect","clientX","left","clientY","top","hypot","play","setTimeout","Missions","missions","setMissions","completed","setCompleted","map","m","key","mission_id","className","description","href","link","target","rel","includes","missionId","completeMission","Referral","userId","referrals","setReferrals","referralLink","type","value","readOnly","Leaderboard","leaders","setLeaders","leader","index","telegram_id","App","tab","setTab","setInitData","user","setUser","webApp","ready","id","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.be7e442e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Home({ initData }) {\r\n  const [userData, setUserData] = useState(null);\r\n  const [isClaiming, setIsClaiming] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [initData]); // Refetch if initData changes\r\n\r\n  const fetchUser = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `/user?start_param=${encodeURIComponent(window.Telegram.WebApp.initDataUnsafe.start_param || '')}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${initData}` },\r\n        }\r\n      );\r\n      if (!response.ok) throw new Error('Failed to fetch user data');\r\n      const data = await response.json();\r\n      setUserData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      // Optionally set an error state for UI display\r\n    }\r\n  };\r\n\r\n  const claimTicket = async () => {\r\n    setIsClaiming(true);\r\n    try {\r\n      const response = await fetch('/claim_ticket', {\r\n        method: 'POST',\r\n        headers: { Authorization: `Bearer ${initData}` },\r\n      });\r\n      if (!response.ok) throw new Error('Failed to claim ticket');\r\n      const data = await response.json();\r\n      setUserData((prev) => ({ ...prev, tickets: data.tickets }));\r\n    } catch (error) {\r\n      console.error('Error claiming ticket:', error);\r\n      alert('Failed to claim ticket. Please try again.');\r\n    } finally {\r\n      setIsClaiming(false);\r\n    }\r\n  };\r\n\r\n  if (!userData) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <p>Points: {userData.points}</p>\r\n      <p>Tickets: {userData.tickets}/7</p>\r\n      <button\r\n        onClick={claimTicket}\r\n        disabled={\r\n          isClaiming ||\r\n          userData.tickets >= 7 ||\r\n          userData.last_ticket_date === new Date().toISOString().split('T')[0]\r\n        }\r\n      >\r\n        {isClaiming ? 'Claiming...' : 'Claim Daily Ticket'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction Game({ initData }) {\r\n  const [tickets, setTickets] = useState(0);\r\n  const [playing, setPlaying] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const canvasRef = useRef(null);\r\n  const objectsRef = useRef([]);\r\n  const catchSound = useRef(new Audio('/sounds/catch.mp3'));\r\n\r\n  useEffect(() => {\r\n    fetch('/user', { headers: { 'Authorization': `Bearer ${initData}` } })\r\n      .then(res => res.json())\r\n      .then(data => setTickets(data.tickets));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n\r\n    const render = () => {\r\n      if (!playing) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      objectsRef.current.forEach(obj => {\r\n        obj.y += obj.speed;\r\n        if (obj.y > canvas.height) {\r\n          objectsRef.current = objectsRef.current.filter(o => o !== obj);\r\n        } else {\r\n          ctx.beginPath();\r\n          ctx.arc(obj.x, obj.y, 10, 0, Math.PI * 2);\r\n          ctx.fillStyle = 'green';\r\n          ctx.fill();\r\n        }\r\n      });\r\n      if (objectsRef.current.length < 20 && Math.random() < 0.1) {\r\n        objectsRef.current.push({ x: Math.random() * canvas.width, y: 0, speed: 2 + Math.random() * 2 });\r\n      }\r\n      animationFrameId = requestAnimationFrame(render);\r\n    };\r\n\r\n    if (playing) {\r\n      render();\r\n    }\r\n\r\n    return () => cancelAnimationFrame(animationFrameId);\r\n  }, [playing]);\r\n\r\n  const startGame = async () => {\r\n    const response = await fetch('/play_game', {\r\n      method: 'POST',\r\n      headers: { 'Authorization': `Bearer ${initData}` }\r\n    });\r\n    if (response.ok) {\r\n      setPlaying(true);\r\n      setScore(0);\r\n      objectsRef.current = [];\r\n      setTickets(prev => prev - 1);\r\n      setTimeout(() => {\r\n        setPlaying(false);\r\n        submitScore();\r\n      }, 25000);\r\n    }\r\n  };\r\n\r\n  const submitScore = async () => {\r\n    await fetch('/submit_score', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${initData}`\r\n      },\r\n      body: JSON.stringify({ score })\r\n    });\r\n  };\r\n\r\n  const handleCanvasClick = (e) => {\r\n    if (!playing) return;\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    objectsRef.current = objectsRef.current.filter(obj => {\r\n      if (Math.hypot(obj.x - x, obj.y - y) < 10) {\r\n        setScore(prev => prev + 10);\r\n        catchSound.current.play();\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {playing ? (\r\n        <div>\r\n          <canvas ref={canvasRef} width=\"300\" height=\"400\" onClick={handleCanvasClick} />\r\n          <p>Score: {score}</p>\r\n        </div>\r\n      ) : (\r\n        <button onClick={startGame} disabled={tickets <= 0}>\r\n          Play (Tickets: {tickets})\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Missions({ initData }) {\r\n  const [missions, setMissions] = useState([]);\r\n  const [completed, setCompleted] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/missions').then(res => res.json()).then(setMissions);\r\n    fetch('/user_missions', { headers: { 'Authorization': `Bearer ${initData}` } })\r\n      .then(res => res.json())\r\n      .then(setCompleted);\r\n  }, []);\r\n\r\n  const completeMission = async (missionId) => {\r\n    const response = await fetch('/complete_mission', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${initData}`\r\n      },\r\n      body: JSON.stringify({ mission_id: missionId })\r\n    });\r\n    if (response.ok) setCompleted(prev => [...prev, missionId]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {missions.map(m => (\r\n        <div key={m.mission_id} className=\"mission\">\r\n          <p>{m.description}</p>\r\n          <a href={m.link} target=\"_blank\" rel=\"noopener noreferrer\">Go</a>\r\n          {completed.includes(m.mission_id) ? (\r\n            <p>✔ Completed</p>\r\n          ) : (\r\n            <button onClick={() => completeMission(m.mission_id)}>Complete</button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Missions;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Referral({ initData, userId }) {\r\n  const [referrals, setReferrals] = useState(0);\r\n  const referralLink = `https://t.me/officialabmcbot/app?startapp=ref_${userId}`;\r\n\r\n  useEffect(() => {\r\n    fetch('/referrals', { headers: { 'Authorization': `Bearer ${initData}` } })\r\n      .then(res => res.json())\r\n      .then(data => setReferrals(data.referrals));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>Referral Link: <input type=\"text\" value={referralLink} readOnly /></p>\r\n      <p>Referrals: {referrals}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Referral;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Leaderboard() {\r\n  const [leaders, setLeaders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/leaderboard').then(res => res.json()).then(setLeaders);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Leaderboard</h2>\r\n      <ul>\r\n        {leaders.map((leader, index) => (\r\n          <li key={index}>{leader.telegram_id}: {leader.points} points</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;","import React, { useState, useEffect } from 'react';\r\nimport Home from './components/Home';\r\nimport Game from './components/Game';\r\nimport Missions from './components/Missions';\r\nimport Referral from './components/Referral';\r\nimport Leaderboard from './components/Leaderboard';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  const [tab, setTab] = useState('home');\r\n  const [initData, setInitData] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (window.Telegram && window.Telegram.WebApp) {\r\n      const webApp = window.Telegram.WebApp;\r\n      webApp.ready();\r\n      setInitData(webApp.initData);\r\n      setUser(webApp.initDataUnsafe.user);\r\n    }\r\n  }, []);\r\n\r\n  if (!user) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>ABMC by HSC</h1>\r\n      <nav>\r\n        <button onClick={() => setTab('home')}>Home</button>\r\n        <button onClick={() => setTab('game')}>Game</button>\r\n        <button onClick={() => setTab('missions')}>Missions</button>\r\n        <button onClick={() => setTab('referral')}>Referral</button>\r\n        <button onClick={() => setTab('leaderboard')}>Leaderboard</button>\r\n      </nav>\r\n      {tab === 'home' && <Home initData={initData} />}\r\n      {tab === 'game' && <Game initData={initData} />}\r\n      {tab === 'missions' && <Missions initData={initData} />}\r\n      {tab === 'referral' && <Referral initData={initData} userId={user.id} />}\r\n      {tab === 'leaderboard' && <Leaderboard />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);"],"sourceRoot":""}